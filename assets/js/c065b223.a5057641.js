"use strict";(self.webpackChunkiggy_website=self.webpackChunkiggy_website||[]).push([[5956],{737:e=>{e.exports=JSON.parse('{"permalink":"/blogs/message-state","source":"@site/blog/2023-08-22-message-state.md","title":"Message state","description":"The message state is a simple field which extends the existing message and provides a way to define whether the particular message might be consumed by the client or not, depending on its value. Let\'s briefly discuss the motivation behind this feature, the implementation details and the breaking changes introduced by this release.","date":"2023-08-22T00:00:00.000Z","tags":[{"inline":true,"label":"new-features","permalink":"/blogs/tags/new-features"},{"inline":true,"label":"message-state","permalink":"/blogs/tags/message-state"},{"inline":true,"label":"message-checksum","permalink":"/blogs/tags/message-checksum"}],"readingTime":4.17,"hasTruncateMarker":true,"authors":[{"name":"Piotr Gankiewicz","title":"Apache Iggy founder","url":"https://github.com/spetz","socials":{},"key":null,"page":null}],"frontMatter":{"title":"Message state","slug":"message-state","authors":[{"name":"Piotr Gankiewicz","title":"Apache Iggy founder","url":"https://github.com/spetz"}],"tags":["new-features","message-state","message-checksum"],"hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Message expiry","permalink":"/blogs/message-expiry"},"nextItem":{"title":"Message headers","permalink":"/blogs/message-headers"}}')},5561:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var a=s(737),n=s(4848),i=s(8453);const r={title:"Message state",slug:"message-state",authors:[{name:"Piotr Gankiewicz",title:"Apache Iggy founder",url:"https://github.com/spetz"}],tags:["new-features","message-state","message-checksum"],hide_table_of_contents:!1},o=void 0,l={authorsImageUrls:[void 0]},c=[];function g(e){const t={code:"code",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(t.p,{children:["The message state is a simple field which extends the existing ",(0,n.jsx)(t.code,{children:"message"})," and provides a way to define whether the particular message might be consumed by the client or not, depending on its value. Let's briefly discuss the motivation behind this feature, the implementation details and the breaking changes introduced by this release."]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var a=s(6540);const n={},i=a.createContext(n);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);