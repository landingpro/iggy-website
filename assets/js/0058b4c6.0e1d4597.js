"use strict";(self.webpackChunkiggy_website=self.webpackChunkiggy_website||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Welcome","href":"/docs/","docId":"iggy","unlisted":false},{"type":"category","label":"Introduction","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"About","href":"/docs/introduction/about","docId":"introduction/introduction-about","unlisted":false},{"type":"link","label":"Architecture","href":"/docs/introduction/architecture","docId":"introduction/introduction-architecture","unlisted":false},{"type":"link","label":"Getting started","href":"/docs/introduction/getting-started","docId":"introduction/introduction-getting-started","unlisted":false},{"type":"link","label":"High-level SDK","href":"/docs/introduction/high-level-sdk","docId":"introduction/introduction-high-level-sdk","unlisted":false},{"type":"link","label":"Stream Builder","href":"/docs/introduction/stream-builder","docId":"introduction/introduction-stream-builder","unlisted":false}]},{"type":"category","label":"Server","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/docs/server/introduction","docId":"server/server-introduction","unlisted":false},{"type":"link","label":"Configuration","href":"/docs/server/configuration","docId":"server/server-configuration","unlisted":false},{"type":"link","label":"Docker","href":"/docs/server/docker","docId":"server/server-docker","unlisted":false},{"type":"link","label":"Schema","href":"/docs/server/schema","docId":"server/server-schema","unlisted":false},{"type":"link","label":"Benchmarking","href":"/docs/server/benchmarking","docId":"server/server-benchmarking","unlisted":false}]},{"type":"category","label":"SDK","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"C#","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/sdk/csharp/intro","docId":"sdk/csharp/sdk-csharp-intro","unlisted":false},{"type":"link","label":"Examples","href":"/docs/sdk/csharp/examples","docId":"sdk/csharp/sdk-csharp-examples","unlisted":false}]},{"type":"category","label":"Go","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/sdk/go/intro","docId":"sdk/go/sdk-go-intro","unlisted":false},{"type":"link","label":"Examples","href":"/docs/sdk/go/examples","docId":"sdk/go/sdk-go-examples","unlisted":false}]},{"type":"category","label":"Java","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/sdk/java/intro","docId":"sdk/java/sdk-java-intro","unlisted":false},{"type":"link","label":"Examples","href":"/docs/sdk/java/examples","docId":"sdk/java/sdk-java-examples","unlisted":false}]},{"type":"category","label":"Node","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/sdk/node/intro","docId":"sdk/node/sdk-node-intro","unlisted":false},{"type":"link","label":"Examples","href":"/docs/sdk/node/examples","docId":"sdk/node/sdk-node-examples","unlisted":false}]},{"type":"category","label":"Python","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/sdk/python/intro","docId":"sdk/python/sdk-python-intro","unlisted":false},{"type":"link","label":"Examples","href":"/docs/sdk/python/examples","docId":"sdk/python/sdk-python-examples","unlisted":false}]},{"type":"category","label":"Rust","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/sdk/rust/intro","docId":"sdk/rust/sdk-rust-intro","unlisted":false},{"type":"link","label":"Examples","href":"/docs/sdk/rust/examples","docId":"sdk/rust/sdk-rust-examples","unlisted":false}]}]},{"type":"category","label":"CLI","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Iggy CLI","href":"/docs/cli/iggy-cli","docId":"cli/cli-iggy-cli","unlisted":false}]},{"type":"category","label":"Connectors","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/docs/connectors/introduction","docId":"connectors/connectors-introduction","unlisted":false},{"type":"link","label":"Runtime","href":"/docs/connectors/runtime","docId":"connectors/connectors-runtime","unlisted":false},{"type":"link","label":"SDK","href":"/docs/connectors/sdk","docId":"connectors/connectors-sdk","unlisted":false},{"type":"link","label":"Sink","href":"/docs/connectors/sink","docId":"connectors/connectors-sink","unlisted":false},{"type":"link","label":"Source","href":"/docs/connectors/source","docId":"connectors/connectors-source","unlisted":false}]},{"type":"category","label":"Web UI","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Iggy Web UI","href":"/docs/web-ui/iggy-web-ui","docId":"web_ui/web-ui-iggy-web-ui","unlisted":false}]}]},"docs":{"cli/cli-iggy-cli":{"id":"cli/cli-iggy-cli","title":"Iggy CLI","description":"The Iggy CLI is a command-line interface that allows you to interact with the Iggy server. You can use the CLI to manage the streams, topics, partitions, messages, users and more. It is part of the core repository under cli directory and is written in Rust.","sidebar":"tutorialSidebar"},"connectors/connectors-introduction":{"id":"connectors/connectors-introduction","title":"Introduction","description":"The highly performant and modular runtime for statically typed, yet dynamically loaded connectors. Ingest the data from the external sources and push it further to the Iggy streams, or fetch the data from the Iggy streams and push it further to the external sources. Create your own Rust plugins by simply implementing either the Source or Sink trait and build custom pipelines for the data processing.","sidebar":"tutorialSidebar"},"connectors/connectors-runtime":{"id":"connectors/connectors-runtime","title":"Runtime","description":"Runtime is responsible for managing the lifecycle of the connectors and providing the necessary infrastructure for the connectors to run.","sidebar":"tutorialSidebar"},"connectors/connectors-sdk":{"id":"connectors/connectors-sdk","title":"SDK","description":"SDK provides the commonly used structs and traits such as Sink and Source, along with the sinkconnector and sourceconnector macros to be used when developing connectors.","sidebar":"tutorialSidebar"},"connectors/connectors-sink":{"id":"connectors/connectors-sink","title":"Sink","description":"Overview","sidebar":"tutorialSidebar"},"connectors/connectors-source":{"id":"connectors/connectors-source","title":"Source","description":"Overview","sidebar":"tutorialSidebar"},"iggy":{"id":"iggy","title":"Welcome","description":"Welcome to Apache Iggy (Incubating) documentation, which is under an active development.","sidebar":"tutorialSidebar"},"introduction/introduction-about":{"id":"introduction/introduction-about","title":"About","description":"Iggy is the persistent message streaming platform written in Rust, supporting QUIC, TCP (custom binary specification) and HTTP (regular REST API) transport protocols, capable of processing millions of messages per second at the low latency.","sidebar":"tutorialSidebar"},"introduction/introduction-architecture":{"id":"introduction/introduction-architecture","title":"Architecture","description":"Iggy is the persistent message streaming, which means, that the messages are being stored in a form of an append-only log. You can create multiple streams, consisting of topics, which might have one or more partitions assigned, e.g. to achieve the horizontal scalability between many independent consumers or higher system resiliency. You can think of Iggy as an alternative to Kafka or RabbitMQ streams.","sidebar":"tutorialSidebar"},"introduction/introduction-getting-started":{"id":"introduction/introduction-getting-started","title":"Getting started","description":"What we will build","sidebar":"tutorialSidebar"},"introduction/introduction-high-level-sdk":{"id":"introduction/introduction-high-level-sdk","title":"High-level SDK","description":"If you\'ve read through the getting started guide, you might have noticed that it\'s quite verbose and requires a lot of boilerplate code to get started. This is where the High-level SDK comes in, as it does provide a more user-friendly interface to interact with the Iggy API for both, producer and consumer. Let\'s consider the following features:","sidebar":"tutorialSidebar"},"introduction/introduction-stream-builder":{"id":"introduction/introduction-stream-builder","title":"Stream Builder","description":"In the previous section, the high level SDK introduced the connection string to simplify the client configuration and","sidebar":"tutorialSidebar"},"sdk/csharp/sdk-csharp-examples":{"id":"sdk/csharp/sdk-csharp-examples","title":"Examples","description":"","sidebar":"tutorialSidebar"},"sdk/csharp/sdk-csharp-intro":{"id":"sdk/csharp/sdk-csharp-intro","title":"Intro","description":"The Iggy SDK for C# is a library that allows you to interact with the Iggy API from your C# applications. This SDK provides a convenient way to interact with the Iggy API and allows you to easily integrate Iggy functionality into your C# applications. Repository can be found here.","sidebar":"tutorialSidebar"},"sdk/go/sdk-go-examples":{"id":"sdk/go/sdk-go-examples","title":"Examples","description":"","sidebar":"tutorialSidebar"},"sdk/go/sdk-go-intro":{"id":"sdk/go/sdk-go-intro","title":"Intro","description":"The Iggy Go SDK is a client library that allows you to interact with the Iggy API from your Go application. Repository can be found here.","sidebar":"tutorialSidebar"},"sdk/java/sdk-java-examples":{"id":"sdk/java/sdk-java-examples","title":"Examples","description":"","sidebar":"tutorialSidebar"},"sdk/java/sdk-java-intro":{"id":"sdk/java/sdk-java-intro","title":"Intro","description":"The Iggy Java SDK is a library that allows you to interact with the Iggy API from your Java application.","sidebar":"tutorialSidebar"},"sdk/node/sdk-node-examples":{"id":"sdk/node/sdk-node-examples","title":"Examples","description":"","sidebar":"tutorialSidebar"},"sdk/node/sdk-node-intro":{"id":"sdk/node/sdk-node-intro","title":"Intro","description":"The Iggy Node.js SDK is a client library that allows you to interact with the Iggy API from your Node.js applications. This guide will help you get started with the SDK and show you how to use it to interact with the Iggy API. Repository can be found here.","sidebar":"tutorialSidebar"},"sdk/python/sdk-python-examples":{"id":"sdk/python/sdk-python-examples","title":"Examples","description":"","sidebar":"tutorialSidebar"},"sdk/python/sdk-python-intro":{"id":"sdk/python/sdk-python-intro","title":"Intro","description":"The Iggy Python SDK is a client library that allows you to interact with the Iggy API from your Python application. Repository can be found here.","sidebar":"tutorialSidebar"},"sdk/rust/sdk-rust-examples":{"id":"sdk/rust/sdk-rust-examples","title":"Examples","description":"In the core repository, you can find the following examples using the Rust SDK:","sidebar":"tutorialSidebar"},"sdk/rust/sdk-rust-intro":{"id":"sdk/rust/sdk-rust-intro","title":"Intro","description":"To learn more about the Rust SDK, please check the getting started guide. The SDK is available on crates.io and the source code can be is part of the core repository, located under sdk directory.","sidebar":"tutorialSidebar"},"server/server-benchmarking":{"id":"server/server-benchmarking","title":"Benchmarking","description":"Benchmarks should be the first-class citizens. We believe that performance is crucial for any system, and we strive to provide the best possible performance for our users. Please check, why we believe that the transparent benchmarking is so important.","sidebar":"tutorialSidebar"},"server/server-configuration":{"id":"server/server-configuration","title":"Configuration","description":"The configuration can be found in server.toml file in configs directory. The config file is loaded from the current working directory, but you can specify the path to the configuration file by setting IGGYCONFIGPATH environment variable, for example export IGGYCONFIGPATH=configs/server.toml (or other command depending on OS). You can also provide the .env file in order to override the configuration - the convention is to use IGGY prefix for the environment variables e.g. IGGYHTTP_ENABLED=true.","sidebar":"tutorialSidebar"},"server/server-docker":{"id":"server/server-docker","title":"Docker","description":"You can easily run the Iggy server with Docker - the official images can be found here, simply type docker pull apache/iggy.","sidebar":"tutorialSidebar"},"server/server-introduction":{"id":"server/server-introduction","title":"Introduction","description":"Introduction","sidebar":"tutorialSidebar"},"server/server-schema":{"id":"server/server-schema","title":"Schema","description":"Since the Iggy server supports a variety of transport protocols, it is important to have a common schema for all of them, that will represent the data in a unified way. Commands (requests), responses, data models, status codes, must be the same for all transports.","sidebar":"tutorialSidebar"},"web_ui/web-ui-iggy-web-ui":{"id":"web_ui/web-ui-iggy-web-ui","title":"Iggy Web UI","description":"Iggy Web UI provides a comprehensive dashboard for Iggy server. It allows you to monitor the server\'s health, streams, topics, browse the messages, users and more. The dashboard is built with Svelte and is available as open-source repository as well as the Docker image on Docker Hub.","sidebar":"tutorialSidebar"}}}}')}}]);